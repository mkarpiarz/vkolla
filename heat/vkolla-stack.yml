heat_template_version: 2017-09-01

description: Multinode OpenStack deployment with Kolla and vScaler

parameters:
  image:
    type: string
    label: Instance image
    description: Image to use for instances
    default: Ubuntu-16.04-LTS
  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for access to instances
  control_flavour:
    type: string
    label: Control instance flavour
    description: Flavour to use with control instances
    default: m1.medium
  network_flavour:
    type: string
    label: Network instance flavour
    description: Flavour to use with network instances
    default: m1.medium
  compute_flavour:
    type: string
    label: Compute instance flavour
    description: Flavour to use with compute instances
    default: m1.large
  client_flavour:
    type: string
    label: Client instance flavour
    description: Flavour to use with client instances
    default: m1.small
  external_network:
    type: string
    label: External network name or ID
    description: External network with floating IP addresses.
    default: public1
  main_net_cidr:
    type: string
    label: main net CIDR
    description: CIDR of the main network
    default: 192.168.17.0/24
  tunnel_net_cidr:
    type: string
    label: tunnel net CIDR
    description: CIDR of the tunnel network
    default: 172.16.0.0/24
  provider_net_cidr:
    type: string
    label: provider net CIDR
    description: CIDR of the provider network
    default: 172.18.0.0/24
  vip_net_cidr:
    type: string
    label: vip net CIDR
    description: CIDR of the VIP network
    default: 10.10.10.0/24

resources:
  os_services_infra_client:
    type: OS::Neutron::SecurityGroup
    properties:
      description: SecGroup to assign to hosts requiring access to infrastructure services
      name: os-services-infra-client
      rules: []

  os_services_infra_server:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Open ports for infrastructure services
      name: os-services-infra-server

  rabbitmq_main_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: RabbitMQ main port
      direction: ingress
      port_range_min: 5672
      port_range_max: 5672
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }
  rabbitmq_mgmt_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: RabbitMQ Management console
      direction: ingress
      port_range_min: 15672
      port_range_max: 15672
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }
  rabbitmq_cluster_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: RabbitMQ cluster
      direction: ingress
      port_range_min: 25672
      port_range_max: 25672
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }

  mysql_main_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: MySQL/MariaDB main port
      direction: ingress
      port_range_min: 3306
      port_range_max: 3306
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }
  mysql_repl_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: MySQL/MariaDB replication port (Galera)
      direction: ingress
      port_range_min: 4567
      port_range_max: 4567
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }

  memcached_main_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: Memcached main port
      direction: ingress
      port_range_min: 11211
      port_range_max: 11211
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }

  haproxy_stats_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_infra_server }
      description: HAProxy statistics report
      direction: ingress
      port_range_min: 1984
      port_range_max: 1984
      protocol: tcp
      remote_group: { get_resource: os_services_infra_client }

  os_services_api_client:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Assign to hosts requiring access to OpenStack APIs
      name: os-services-api-client
      rules: []

  os_services_api_server:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Open ports for OpenStack APIs
      name: os-services-api-server

  keystone_public_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Keystone public endpoint
      direction: ingress
      port_range_min: 5000
      port_range_max: 5000
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }
  keystone_admin_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Keystone admin endpoint
      direction: ingress
      port_range_min: 35357
      port_range_max: 35357
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }

  glance_api_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Glance API
      direction: ingress
      port_range_min: 9292
      port_range_max: 9292
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }
  glance_registry_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Glance registry
      direction: ingress
      port_range_min: 9191
      port_range_max: 9191
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }

  neutron_server_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Neutron server API
      direction: ingress
      port_range_min: 9696
      port_range_max: 9696
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }

  nova_api_and_metadata_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Nova API and Nova metadata
      direction: ingress
      port_range_min: 8774
      port_range_max: 8775
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }
  placement_api_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Placement API
      direction: ingress
      port_range_min: 8780
      port_range_max: 8780
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }
  nova_novncproxy_port:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: os_services_api_server }
      description: Nova novncproxy
      direction: ingress
      port_range_min: 6080
      port_range_max: 6080
      protocol: tcp
      remote_group: { get_resource: os_services_api_client }

# Networks and routers
  main_net:
    type: OS::Neutron::Net
    properties:
      name: main_net

  main_net_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: main_net_subnet
      network_id: { get_resource: main_net }
      cidr: { get_param: main_net_cidr }
      dns_nameservers: [ 8.8.8.8 ]
      enable_dhcp: true

  tunnel_net:
    type: OS::Neutron::Net
    properties:
      name: tunnel_net

  tunnel_net_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: tunnel_net_subnet
      network_id: { get_resource: tunnel_net }
      cidr: { get_param: tunnel_net_cidr }
      enable_dhcp: true

  provider_net:
    type: OS::Neutron::Net
    properties:
      name: provider_net

  provider_net_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: provider_net_subnet
      network_id: { get_resource: provider_net }
      cidr: { get_param: provider_net_cidr }
      enable_dhcp: false

  vip_net:
    type: OS::Neutron::Net
    properties:
      name: vip_net

  vip_net_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: vip_net_subnet
      network_id: { get_resource: vip_net }
      cidr: { get_param: vip_net_cidr }
      enable_dhcp: false

  main_router:
    type: OS::Neutron::Router
    properties:
      name: main_router
      external_gateway_info:
        network: { get_param: external_network }

  main_net_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: main_router }
      subnet: { get_resource: main_net_subnet }

  vip_net_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: main_router }
      subnet: { get_resource: vip_net_subnet }

  provider_net_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: main_router }
      subnet: { get_resource: provider_net_subnet }

  control_instances:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Nova::Server
        properties:
          image: { get_param: image }
          flavor: { get_param: control_flavour }
          key_name: { get_param: key }
          security_groups:
            - { get_resource: os_services_infra_server }
            - { get_resource: os_services_api_server }
          networks:
            - network: { get_resource: main_net }
            - network: { get_resource: tunnel_net }
          metadata:
            groups: control

  # TODO: Use `allowed_address_pairs` instead of disabling port security.
  # TODO: Allow access to HAProxy stats.
  network_instances:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Nova::Server
        properties:
          image: { get_param: image }
          flavor: { get_param: network_flavour }
          key_name: { get_param: key }
          security_groups:
            - { get_resource: os_services_infra_server }
            - { get_resource: os_services_infra_client }
            - { get_resource: os_services_api_server }
            - { get_resource: os_services_api_client }
          networks:
            - network: { get_resource: main_net }
            - network: { get_resource: tunnel_net }
            - network: { get_resource: provider_net }
              port_extra_properties:
                port_security_enabled: false
            - network: { get_resource: vip_net }
              port_extra_properties:
                port_security_enabled: false
          metadata:
            groups: network

  compute_instances:
    type: OS::Heat::ResourceGroup
    properties:
      count: 1
      resource_def:
        type: OS::Nova::Server
        properties:
          image: { get_param: image }
          flavor: { get_param: compute_flavour }
          key_name: { get_param: key }
          security_groups:
            - { get_resource: os_services_infra_client }
            - { get_resource: os_services_api_client }
          networks:
            - network: { get_resource: main_net }
            - network: { get_resource: tunnel_net }
          metadata:
            groups: compute

  test_client:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: client_flavour }
      key_name: { get_param: key }
      security_groups:
        - { get_resource: os_services_infra_client }
        - { get_resource: os_services_api_client }
      networks:
        - network: { get_resource: vip_net }
